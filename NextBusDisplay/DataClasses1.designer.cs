#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TransitSchedule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NextBusDisplay")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStopDisplay(StopDisplay instance);
    partial void UpdateStopDisplay(StopDisplay instance);
    partial void DeleteStopDisplay(StopDisplay instance);
    partial void InsertStaticTrain(StaticTrain instance);
    partial void UpdateStaticTrain(StaticTrain instance);
    partial void DeleteStaticTrain(StaticTrain instance);
    partial void InsertPlatformDisplay(PlatformDisplay instance);
    partial void UpdatePlatformDisplay(PlatformDisplay instance);
    partial void DeletePlatformDisplay(PlatformDisplay instance);
    partial void InsertPlatformOverride(PlatformOverride instance);
    partial void UpdatePlatformOverride(PlatformOverride instance);
    partial void DeletePlatformOverride(PlatformOverride instance);
    partial void InsertStaticTrainOverride(StaticTrainOverride instance);
    partial void UpdateStaticTrainOverride(StaticTrainOverride instance);
    partial void DeleteStaticTrainOverride(StaticTrainOverride instance);
    partial void InsertHolidays(Holidays instance);
    partial void UpdateHolidays(Holidays instance);
    partial void DeleteHolidays(Holidays instance);
    partial void InsertServiceNotices(ServiceNotices instance);
    partial void UpdateServiceNotices(ServiceNotices instance);
    partial void DeleteServiceNotices(ServiceNotices instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NextBusDisplayConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StopDisplay> StopDisplays
		{
			get
			{
				return this.GetTable<StopDisplay>();
			}
		}
		
		public System.Data.Linq.Table<StaticTrain> StaticTrains
		{
			get
			{
				return this.GetTable<StaticTrain>();
			}
		}
		
		public System.Data.Linq.Table<PlatformDisplay> PlatformDisplays
		{
			get
			{
				return this.GetTable<PlatformDisplay>();
			}
		}
		
		public System.Data.Linq.Table<PlatformOverride> PlatformOverrides
		{
			get
			{
				return this.GetTable<PlatformOverride>();
			}
		}
		
		public System.Data.Linq.Table<StaticTrainOverride> StaticTrainOverrides
		{
			get
			{
				return this.GetTable<StaticTrainOverride>();
			}
		}
		
		public System.Data.Linq.Table<Holidays> Holidays
		{
			get
			{
				return this.GetTable<Holidays>();
			}
		}
		
		public System.Data.Linq.Table<ServiceNotices> ServiceNotices
		{
			get
			{
				return this.GetTable<ServiceNotices>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_PlatformOverride")]
		public ISingleResult<PlatformOverride> sp_PlatformOverride()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<PlatformOverride>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StopDisplay")]
	public partial class StopDisplay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StopNumber;
		
		private bool _Show;
		
		private int _Platform;
		
		private string _Description;
		
		private string _StopID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStopNumberChanging(int value);
    partial void OnStopNumberChanged();
    partial void OnShowChanging(bool value);
    partial void OnShowChanged();
    partial void OnPlatformChanging(int value);
    partial void OnPlatformChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStopIDChanging(string value);
    partial void OnStopIDChanged();
    #endregion
		
		public StopDisplay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StopNumber
		{
			get
			{
				return this._StopNumber;
			}
			set
			{
				if ((this._StopNumber != value))
				{
					this.OnStopNumberChanging(value);
					this.SendPropertyChanging();
					this._StopNumber = value;
					this.SendPropertyChanged("StopNumber");
					this.OnStopNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
		public bool Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="INT")]
		public int Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="varchar(50)", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopID", DbType="VARCHAR(50) NOT NULL", CanBeNull=false)]
		public string StopID
		{
			get
			{
				return this._StopID;
			}
			set
			{
				if ((this._StopID != value))
				{
					this.OnStopIDChanging(value);
					this.SendPropertyChanging();
					this._StopID = value;
					this.SendPropertyChanged("StopID");
					this.OnStopIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaticTrains")]
	public partial class StaticTrain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaticTrainId;
		
		private string _Train;
		
		private string _Number;
		
		private string _Direction;
		
		private string _DepartTime;
		
		private string _Platform;
		
		private string _Days;
		
		private string _StopID;
		
		private string _TrainID;
		
		private string _BlockID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaticTrainIdChanging(int value);
    partial void OnStaticTrainIdChanged();
    partial void OnTrainChanging(string value);
    partial void OnTrainChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnDirectionChanging(string value);
    partial void OnDirectionChanged();
    partial void OnDepartTimeChanging(string value);
    partial void OnDepartTimeChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnDaysChanging(string value);
    partial void OnDaysChanged();
    partial void OnStopIDChanging(string value);
    partial void OnStopIDChanged();
    partial void OnTrainIDChanging(string value);
    partial void OnTrainIDChanged();
    partial void OnBlockIDChanging(string value);
    partial void OnBlockIDChanged();
    #endregion
		
		public StaticTrain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticTrainId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaticTrainId
		{
			get
			{
				return this._StaticTrainId;
			}
			set
			{
				if ((this._StaticTrainId != value))
				{
					this.OnStaticTrainIdChanging(value);
					this.SendPropertyChanging();
					this._StaticTrainId = value;
					this.SendPropertyChanged("StaticTrainId");
					this.OnStaticTrainIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Train", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Train
		{
			get
			{
				return this._Train;
			}
			set
			{
				if ((this._Train != value))
				{
					this.OnTrainChanging(value);
					this.SendPropertyChanging();
					this._Train = value;
					this.SendPropertyChanged("Train");
					this.OnTrainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartTime", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartTime
		{
			get
			{
				return this._DepartTime;
			}
			set
			{
				if ((this._DepartTime != value))
				{
					this.OnDepartTimeChanging(value);
					this.SendPropertyChanging();
					this._DepartTime = value;
					this.SendPropertyChanged("DepartTime");
					this.OnDepartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StopID
		{
			get
			{
				return this._StopID;
			}
			set
			{
				if ((this._StopID != value))
				{
					this.OnStopIDChanging(value);
					this.SendPropertyChanging();
					this._StopID = value;
					this.SendPropertyChanged("StopID");
					this.OnStopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainID
		{
			get
			{
				return this._TrainID;
			}
			set
			{
				if ((this._TrainID != value))
				{
					this.OnTrainIDChanging(value);
					this.SendPropertyChanging();
					this._TrainID = value;
					this.SendPropertyChanged("TrainID");
					this.OnTrainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockID", DbType="VARCHAR(50) NOT NULL", CanBeNull=false)]
		public string BlockID
		{
			get
			{
				return this._BlockID;
			}
			set
			{
				if ((this._BlockID != value))
				{
					this.OnBlockIDChanging(value);
					this.SendPropertyChanging();
					this._BlockID = value;
					this.SendPropertyChanged("BlockID");
					this.OnBlockIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlatformDisplay")]
	public partial class PlatformDisplay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlatformDisplayId;
		
		private string _Route;
		
		private string _Stop;
		
		private string _Platform;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlatformDisplayIdChanging(int value);
    partial void OnPlatformDisplayIdChanged();
    partial void OnRouteChanging(string value);
    partial void OnRouteChanged();
    partial void OnStopChanging(string value);
    partial void OnStopChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    #endregion
		
		public PlatformDisplay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformDisplayId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlatformDisplayId
		{
			get
			{
				return this._PlatformDisplayId;
			}
			set
			{
				if ((this._PlatformDisplayId != value))
				{
					this.OnPlatformDisplayIdChanging(value);
					this.SendPropertyChanging();
					this._PlatformDisplayId = value;
					this.SendPropertyChanged("PlatformDisplayId");
					this.OnPlatformDisplayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="VarChar(50)")]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this.OnRouteChanging(value);
					this.SendPropertyChanging();
					this._Route = value;
					this.SendPropertyChanged("Route");
					this.OnRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stop", DbType="VarChar(50)")]
		public string Stop
		{
			get
			{
				return this._Stop;
			}
			set
			{
				if ((this._Stop != value))
				{
					this.OnStopChanging(value);
					this.SendPropertyChanging();
					this._Stop = value;
					this.SendPropertyChanged("Stop");
					this.OnStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="VarChar(50)")]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlatformOverride")]
	public partial class PlatformOverride : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlatformOverrideId;
		
		private string _Route;
		
		private string _Stop;
		
		private string _Platform;
		
		private System.Nullable<bool> _UseNextBusFeed;
		
		private System.DateTime _OverrideUntil;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlatformOverrideIdChanging(int value);
    partial void OnPlatformOverrideIdChanged();
    partial void OnRouteChanging(string value);
    partial void OnRouteChanged();
    partial void OnStopChanging(string value);
    partial void OnStopChanged();
    partial void OnPlatformChanging(string value);
    partial void OnPlatformChanged();
    partial void OnUseNextBusFeedChanging(System.Nullable<bool> value);
    partial void OnUseNextBusFeedChanged();
    partial void OnOverrideUntilChanging(System.DateTime value);
    partial void OnOverrideUntilChanged();
    #endregion
		
		public PlatformOverride()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformOverrideId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlatformOverrideId
		{
			get
			{
				return this._PlatformOverrideId;
			}
			set
			{
				if ((this._PlatformOverrideId != value))
				{
					this.OnPlatformOverrideIdChanging(value);
					this.SendPropertyChanging();
					this._PlatformOverrideId = value;
					this.SendPropertyChanged("PlatformOverrideId");
					this.OnPlatformOverrideIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this.OnRouteChanging(value);
					this.SendPropertyChanging();
					this._Route = value;
					this.SendPropertyChanged("Route");
					this.OnRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stop", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Stop
		{
			get
			{
				return this._Stop;
			}
			set
			{
				if ((this._Stop != value))
				{
					this.OnStopChanging(value);
					this.SendPropertyChanging();
					this._Stop = value;
					this.SendPropertyChanged("Stop");
					this.OnStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platform", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Platform
		{
			get
			{
				return this._Platform;
			}
			set
			{
				if ((this._Platform != value))
				{
					this.OnPlatformChanging(value);
					this.SendPropertyChanging();
					this._Platform = value;
					this.SendPropertyChanged("Platform");
					this.OnPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseNextBusFeed", DbType="Bit")]
		public System.Nullable<bool> UseNextBusFeed
		{
			get
			{
				return this._UseNextBusFeed;
			}
			set
			{
				if ((this._UseNextBusFeed != value))
				{
					this.OnUseNextBusFeedChanging(value);
					this.SendPropertyChanging();
					this._UseNextBusFeed = value;
					this.SendPropertyChanged("UseNextBusFeed");
					this.OnUseNextBusFeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideUntil", DbType="SMALLDATETIME")]
		public System.DateTime OverrideUntil
		{
			get
			{
				return this._OverrideUntil;
			}
			set
			{
				if ((this._OverrideUntil != value))
				{
					this.OnOverrideUntilChanging(value);
					this.SendPropertyChanging();
					this._OverrideUntil = value;
					this.SendPropertyChanged("OverrideUntil");
					this.OnOverrideUntilChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaticTrainOverride")]
	public partial class StaticTrainOverride : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaticTrainOverrideId;
		
		private int _StaticTrainId;
		
		private bool _ShowSchedule;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaticTrainOverrideIdChanging(int value);
    partial void OnStaticTrainOverrideIdChanged();
    partial void OnStaticTrainIdChanging(int value);
    partial void OnStaticTrainIdChanged();
    partial void OnShowScheduleChanging(bool value);
    partial void OnShowScheduleChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    #endregion
		
		public StaticTrainOverride()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticTrainOverrideId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaticTrainOverrideId
		{
			get
			{
				return this._StaticTrainOverrideId;
			}
			set
			{
				if ((this._StaticTrainOverrideId != value))
				{
					this.OnStaticTrainOverrideIdChanging(value);
					this.SendPropertyChanging();
					this._StaticTrainOverrideId = value;
					this.SendPropertyChanged("StaticTrainOverrideId");
					this.OnStaticTrainOverrideIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticTrainId", DbType="Int NOT NULL")]
		public int StaticTrainId
		{
			get
			{
				return this._StaticTrainId;
			}
			set
			{
				if ((this._StaticTrainId != value))
				{
					this.OnStaticTrainIdChanging(value);
					this.SendPropertyChanging();
					this._StaticTrainId = value;
					this.SendPropertyChanged("StaticTrainId");
					this.OnStaticTrainIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowSchedule", DbType="Bit NOT NULL")]
		public bool ShowSchedule
		{
			get
			{
				return this._ShowSchedule;
			}
			set
			{
				if ((this._ShowSchedule != value))
				{
					this.OnShowScheduleChanging(value);
					this.SendPropertyChanging();
					this._ShowSchedule = value;
					this.SendPropertyChanged("ShowSchedule");
					this.OnShowScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblHoliDate")]
	public partial class Holidays : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Holiday;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHolidayChanging(System.DateTime value);
    partial void OnHolidayChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Holidays()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Holiday", DbType="DATE NOT NULL")]
		public System.DateTime Holiday
		{
			get
			{
				return this._Holiday;
			}
			set
			{
				if ((this._Holiday != value))
				{
					this.OnHolidayChanging(value);
					this.SendPropertyChanging();
					this._Holiday = value;
					this.SendPropertyChanged("Holiday");
					this.OnHolidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VARCHAR(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceNotice")]
	public partial class ServiceNotices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutoID;
		
		private string _ServiceNoticeID;
		
		private string _DisplayText;
		
		private System.DateTime _DisplayFrom;
		
		private System.DateTime _DisplayTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutoIDChanging(int value);
    partial void OnAutoIDChanged();
    partial void OnServiceNoticeIDChanging(string value);
    partial void OnServiceNoticeIDChanged();
    partial void OnDisplayTextChanging(string value);
    partial void OnDisplayTextChanged();
    partial void OnDisplayFromChanging(System.DateTime value);
    partial void OnDisplayFromChanged();
    partial void OnDisplayToChanging(System.DateTime value);
    partial void OnDisplayToChanged();
    #endregion
		
		public ServiceNotices()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutoID
		{
			get
			{
				return this._AutoID;
			}
			set
			{
				if ((this._AutoID != value))
				{
					this.OnAutoIDChanging(value);
					this.SendPropertyChanging();
					this._AutoID = value;
					this.SendPropertyChanged("AutoID");
					this.OnAutoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceNoticeID", DbType="VARCHAR(20) NOT NULL", CanBeNull=false)]
		public string ServiceNoticeID
		{
			get
			{
				return this._ServiceNoticeID;
			}
			set
			{
				if ((this._ServiceNoticeID != value))
				{
					this.OnServiceNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceNoticeID = value;
					this.SendPropertyChanged("ServiceNoticeID");
					this.OnServiceNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="VARCHAR(8000)  NOT NULL", CanBeNull=false)]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this.OnDisplayTextChanging(value);
					this.SendPropertyChanging();
					this._DisplayText = value;
					this.SendPropertyChanged("DisplayText");
					this.OnDisplayTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayFrom", DbType="DATE NOT NULL")]
		public System.DateTime DisplayFrom
		{
			get
			{
				return this._DisplayFrom;
			}
			set
			{
				if ((this._DisplayFrom != value))
				{
					this.OnDisplayFromChanging(value);
					this.SendPropertyChanging();
					this._DisplayFrom = value;
					this.SendPropertyChanged("DisplayFrom");
					this.OnDisplayFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayTo", DbType=" DATE NOT NULL")]
		public System.DateTime DisplayTo
		{
			get
			{
				return this._DisplayTo;
			}
			set
			{
				if ((this._DisplayTo != value))
				{
					this.OnDisplayToChanging(value);
					this.SendPropertyChanging();
					this._DisplayTo = value;
					this.SendPropertyChanged("DisplayTo");
					this.OnDisplayToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        internal static string ServicesHTMLRows()
        {
            throw new NotImplementedException();
        }
    }
}
#pragma warning restore 1591
